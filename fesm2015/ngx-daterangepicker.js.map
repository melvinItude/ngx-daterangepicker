{"version":3,"file":"ngx-daterangepicker.js","sources":["ng://ngx-daterangepicker/lib/ngx-daterangepicker/constants.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker/ngx-daterangepicker.component.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker/ngx-format.pipe.ts","ng://ngx-daterangepicker/lib/ngx-daterangepicker.module.ts"],"sourcesContent":["import * as es from 'date-fns/locale/es';\nimport * as en from 'date-fns/locale/en';\n\nexport const locales: any = {\n  es,\n  en,\n};\n","import {\n    Component, OnInit, HostListener, ElementRef, forwardRef, Input, OnChanges, SimpleChange,\n    ViewChild, AfterViewInit, ChangeDetectorRef\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport * as dateFns from 'date-fns';\nimport {locales} from './constants';\n\nexport interface NgxDateRangePickerDates {\n    from: Date | {\n        year: number,\n        month: number,\n        day: number\n    };\n    to: Date | {\n        year: number,\n        month: number,\n        day: number,\n    };\n}\n\nexport interface NgxMenuItem {\n    alias: string;\n    text: string;\n    operation: string;\n    active?: boolean;\n}\n\nexport interface NgxDateRangePickerOptions {\n    theme: 'default' | 'green' | 'teal' | 'cyan' | 'grape' | 'red' | 'gray';\n    range?: string;\n    locale?: string;\n    labels: string[];\n    menu: NgxMenuItem[];\n    dateFormat: string;\n    outputFormat: string;\n    startOfWeek: number;\n    outputType?: 'string' | 'object';\n    minDate?: Date | {\n        year: number,\n        month: number,\n        day: number,\n    };\n    maxDate?: Date | {\n        year: number,\n        month: number,\n        day: number,\n    };\n    date?: NgxDateRangePickerDates;\n}\n\nexport interface IDay {\n    date: Date;\n    day: number;\n    weekday: number;\n    today: boolean;\n    firstMonthDay: boolean;\n    lastMonthDay: boolean;\n    visible: boolean;\n    from: boolean;\n    to: boolean;\n    isWithinRange: boolean;\n}\n\nexport let DATERANGEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxDateRangePickerComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'ngx-daterangepicker',\n    templateUrl: 'ngx-daterangepicker.component.html',\n    styleUrls: ['ngx-daterangepicker.component.sass'],\n    providers: [DATERANGEPICKER_VALUE_ACCESSOR]\n})\nexport class NgxDateRangePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnChanges {\n    @ViewChild('fromInput', { static: true }) fromInput: ElementRef<HTMLDivElement>;\n    @Input() options: NgxDateRangePickerOptions;\n\n    modelValue: string | Object;\n    opened: false | 'from' | 'to';\n    date: Date;\n    dateFrom: Date;\n    dateTo: Date;\n    dayNames: string[];\n    days: IDay[];\n    range: string;\n    defaultOptions: NgxDateRangePickerOptions = {\n        theme: 'default',\n        labels: ['Start', 'End'],\n        locale: 'en',\n        menu: [],\n        dateFormat: 'DD-MM-YYYY',\n        outputFormat: 'DD-MM-YYYY',\n        outputType: 'string',\n        startOfWeek: 1,\n        date: null\n    };\n\n    arrowLeft: number;\n\n    private onTouchedCallback: () => void = () => {\n    };\n\n    private onChangeCallback: (_: any) => void = () => {\n    };\n\n    constructor(private elementRef: ElementRef, private cdr: ChangeDetectorRef) {\n    }\n\n    get value(): string | Object {\n        return this.modelValue;\n    }\n\n    set value(value: string | Object) {\n        if (!value) {\n            return;\n        }\n        this.modelValue = value;\n        this.onChangeCallback(value);\n    }\n\n    writeValue(value: string) {\n        if (!value) {\n            return;\n        }\n        this.modelValue = value;\n    }\n\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n    ngAfterViewInit(): void {\n        this.arrowLeft = this.fromInput.nativeElement.offsetWidth;\n        this.cdr.detectChanges();\n    }\n\n    ngOnInit() {\n        this.opened = false;\n\n        this.defaultOptions.date = {\n            from: this.date,\n            to: dateFns.addDays(this.date, 1)\n        };\n\n        this.options = this.options || this.defaultOptions;\n        this.initNames();\n\n        if (this.options.range) {\n            this.selectRange(this.options.menu.filter((item) => {\n                return this.options.range === item.alias;\n            })[0]);\n        } else {\n            if (!this.options.date) {\n                this.options.date = this.defaultOptions.date;\n            }\n\n            this.selectDates(this.options.date);\n        }\n    }\n\n    ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n        this.options = this.options || this.defaultOptions;\n\n\n        if (this.options.date) {\n            this.selectDates(this.options.date);\n        }\n\n        this.initNames();\n    }\n\n    initNames(): void {\n        this.dayNames = [];\n        for (let i = 1; i < 7; ++i) {\n            this.dayNames.push(this.getDayOfWeek(i));\n        }\n\n        this.dayNames.push(this.getDayOfWeek(0));\n    }\n\n    getDayOfWeek(day: number): string {\n        const date = new Date();\n        const dayOfWeek = dateFns.format(dateFns.setDay(date, day, {weekStartsOn: 1}), 'dd', {locale: locales[this.options.locale]});\n        return dayOfWeek[0].toUpperCase() + dayOfWeek.substring(1);\n    }\n\n    generateCalendar(): void {\n        this.days = [];\n        const start: Date = dateFns.startOfMonth(this.date);\n        const end: Date = dateFns.endOfMonth(this.date);\n\n        const days: IDay[] = dateFns.eachDay(start, end).map(d => {\n            const startOfWeek = this.options.startOfWeek;\n            const endOfWeek = startOfWeek === 0 ? 6 : 0;\n            return {\n                date: d,\n                day: dateFns.getDate(d),\n                weekday: dateFns.getDay(d),\n                startOfWeek,\n                endOfWeek,\n                today: dateFns.isToday(d),\n                firstMonthDay: dateFns.isFirstDayOfMonth(d),\n                lastMonthDay: dateFns.isLastDayOfMonth(d),\n                visible: true,\n                from: dateFns.isSameDay(this.dateFrom, d),\n                to: dateFns.isSameDay(this.dateTo, d),\n                isWithinRange: dateFns.isWithinRange(d, this.dateFrom, this.dateTo)\n            };\n        });\n\n        const prevMonthDayNum = dateFns.getDay(start) - 1;\n        let prevMonthDays: IDay[] = [];\n        if (prevMonthDayNum > 0) {\n            prevMonthDays = Array.from(Array(prevMonthDayNum).keys()).map(i => {\n                const d = dateFns.subDays(start, prevMonthDayNum - i);\n                return {\n                    date: d,\n                    day: dateFns.getDate(d),\n                    weekday: dateFns.getDay(d),\n                    firstMonthDay: dateFns.isFirstDayOfMonth(d),\n                    lastMonthDay: dateFns.isLastDayOfMonth(d),\n                    today: false,\n                    visible: false,\n                    from: false,\n                    to: false,\n                    isWithinRange: false\n                };\n            });\n        }\n\n        this.days = prevMonthDays.concat(days);\n        if (this.options.outputType === 'object') {\n            this.value = {\n                from: dateFns.format(this.dateFrom, this.options.outputFormat),\n                to: dateFns.format(this.dateTo, this.options.outputFormat)\n            };\n        } else {\n            this.value =\n                `${dateFns.format(this.dateFrom, this.options.outputFormat)}-${dateFns.format(this.dateTo, this.options.outputFormat)}`;\n        }\n    }\n\n    toggleCalendar(e: MouseEvent, selection: 'from' | 'to'): void {\n        // Arrow position\n        if (selection === 'from') {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth * 0.4;\n        } else {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth + this.fromInput.nativeElement.offsetWidth * 0.4;\n        }\n\n        if (this.opened && this.opened !== selection) {\n            this.opened = selection;\n        } else {\n            this.opened = this.opened ? false : selection;\n        }\n    }\n\n    closeCalendar(e: MouseEvent): void {\n        this.opened = false;\n    }\n\n    selectDate(e: MouseEvent, index: number): void {\n        e.preventDefault();\n        const selectedDate: Date = this.days[index].date;\n\n        if ((this.getDate(this.options.minDate) &&\n            !dateFns.isAfter(dateFns.startOfDay(selectedDate), this.getDate(this.options.minDate))) ||\n            (this.getDate(this.options.maxDate) &&\n                !dateFns.isBefore(dateFns.startOfDay(selectedDate), this.getDate(this.options.maxDate)))) {\n            return;\n        }\n\n        if ((this.opened === 'to' && dateFns.isBefore(selectedDate, this.dateFrom))) {\n            this.opened = 'from';\n        }\n\n        if ((this.opened === 'from' && dateFns.isAfter(selectedDate, this.dateTo))) {\n            this.dateFrom = selectedDate;\n            this.dateTo = selectedDate;\n        }\n\n        if (this.opened === 'from') {\n            this.dateFrom = selectedDate;\n            this.opened = 'to';\n        } else if (this.opened === 'to') {\n            this.dateTo = selectedDate;\n            this.opened = 'from';\n        }\n\n        if (this.opened === 'from') {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth * 0.4;\n        } else {\n            this.arrowLeft = this.fromInput.nativeElement.offsetWidth + this.fromInput.nativeElement.offsetWidth * 0.4;\n        }\n\n        if (this.options.menu && this.options.menu.length > 0) {\n            this.options.menu.map((item) => {\n                item.active = false;\n            });\n        }\n\n        this.generateCalendar();\n    }\n\n    prevMonth(): void {\n        this.date = dateFns.subMonths(this.date, 1);\n        this.generateCalendar();\n    }\n\n    nextMonth(): void {\n        this.date = dateFns.addMonths(this.date, 1);\n        this.generateCalendar();\n    }\n\n    selectDates(dates: NgxDateRangePickerDates): void {\n        this.dateFrom = this.getDate(dates.from);\n\n        this.dateTo = this.getDate(dates.to);\n\n        if (dateFns.isAfter(this.dateFrom, this.dateTo)) {\n            this.dateTo = this.dateFrom;\n        }\n\n        this.date = dateFns.startOfDay(this.dateFrom);\n\n        this.generateCalendar();\n    }\n\n    selectRange(range: NgxMenuItem): void {\n        const today = dateFns.startOfDay(new Date());\n        let fromDate = today;\n        let toDate = today;\n\n        this.options.menu.map((item) => {\n            item.active = item.alias === range.alias;\n        });\n\n        const operand = range.operation.charAt(0) === '-' ? -1 : 1;\n        const amount = Math.abs(parseInt(range.operation, 10));\n        const ope = range.operation.match(/[d,w,m,y]t?/);\n        const unit = ope.length > 0 ? ope[0] : '';\n\n        switch (unit) {\n            case 'm':\n                if (amount) {\n                    fromDate = dateFns.addMonths(fromDate, amount * operand);\n                    toDate = dateFns.addMonths(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfMonth(fromDate);\n                this.dateTo = dateFns.endOfMonth(toDate);\n                break;\n            case 'w':\n                if (amount) {\n                    fromDate = dateFns.addWeeks(fromDate, amount * operand);\n                    toDate = dateFns.addWeeks(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfWeek(fromDate, {weekStartsOn: this.options.startOfWeek});\n                this.dateTo = dateFns.endOfWeek(toDate, {weekStartsOn: this.options.startOfWeek});\n                break;\n            case 'y':\n                if (amount) {\n                    fromDate = dateFns.addYears(fromDate, amount * operand);\n                    toDate = dateFns.addYears(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfYear(fromDate);\n                this.dateTo = dateFns.endOfYear(toDate);\n                break;\n            case 'd':\n                if (amount) {\n                    fromDate = dateFns.addDays(fromDate, amount * operand);\n                    toDate = dateFns.addDays(fromDate, (amount - 1));\n                }\n\n                this.dateFrom = dateFns.startOfDay(fromDate);\n                this.dateTo = dateFns.startOfDay(toDate);\n                break;\n            // From today\n            case 'mt':\n                if (operand < 0) {\n                    fromDate = dateFns.subMonths(today, amount);\n                } else {\n                    toDate = dateFns.addMonths(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            case 'wt':\n                if (operand < 0) {\n                    fromDate = dateFns.subWeeks(today, amount);\n                } else {\n                    toDate = dateFns.addWeeks(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            case 'yt':\n                if (operand < 0) {\n                    fromDate = dateFns.subYears(today, amount);\n                } else {\n                    toDate = dateFns.addYears(today, amount);\n                }\n\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n            default:\n                if (operand < 0) {\n                    fromDate = dateFns.subDays(today, amount);\n                } else {\n                    toDate = dateFns.addDays(today, amount);\n                }\n                this.dateFrom = fromDate;\n                this.dateTo = toDate;\n                break;\n        }\n\n        this.date = dateFns.startOfDay(this.dateFrom);\n\n        this.range = range.alias;\n        this.generateCalendar();\n    }\n\n    @HostListener('document:click', ['$event'])\n    handleBlurClick(e: MouseEvent) {\n        const target = e.srcElement || e.target;\n        if (!this.elementRef.nativeElement.contains(e.target) && !(<Element>target).classList.contains('day-num')) {\n            this.opened = false;\n        }\n    }\n\n    /**\n     * Method to open calendar\n     */\n    public open(opened: 'from' | 'to' = 'from') {\n        this.toggleCalendar(null, opened);\n    }\n\n    /**\n     * Method to close calendar\n     */\n    public close() {\n        this.opened = false;\n    }\n\n    /**\n     * Method to toggle calendar\n     */\n    public toggle() {\n        if (!!this.opened) {\n            this.close();\n            return;\n        }\n\n        this.open();\n    }\n\n    private getDate(date: Date | { year: number, month: number, day: number }): Date {\n        if (!date) {\n            return null;\n        }\n\n        if (date instanceof Date) {\n            return dateFns.startOfDay(date);\n        }\n\n        if (date instanceof Object && date.year && date.month && date.day) {\n            return dateFns.startOfDay(new Date(date.year, date.month - 1, date.day));\n        }\n\n        return null;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as dateFns from 'date-fns';\nimport { locales } from './constants';\n\n@Pipe({\n  name: 'ngxFormat'\n})\nexport class NgxFormatPipe implements PipeTransform {\n\n  transform(value: Date, ...args: Array<any>): any {\n    const options: any = {};\n    if (args && args[1] && locales.hasOwnProperty(args[1])) {\n      options.locale = locales[args[1]];\n    }\n\n    return dateFns.format(value, args[0] || 'DD-MM-YYYY', options);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxDateRangePickerComponent } from './ngx-daterangepicker/ngx-daterangepicker.component';\nimport { NgxFormatPipe } from './ngx-daterangepicker/ngx-format.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [NgxDateRangePickerComponent, NgxFormatPipe],\n  exports: [NgxDateRangePickerComponent, NgxFormatPipe, FormsModule]\n})\nexport class NgxDateRangePickerModule { }\n"],"names":["dateFns.addDays","dateFns.format","dateFns.setDay","dateFns.startOfMonth","dateFns.endOfMonth","dateFns.eachDay","dateFns.getDate","dateFns.getDay","dateFns.isToday","dateFns.isFirstDayOfMonth","dateFns.isLastDayOfMonth","dateFns.isSameDay","dateFns.isWithinRange","dateFns.subDays","dateFns.isAfter","dateFns.startOfDay","dateFns.isBefore","dateFns.subMonths","dateFns.addMonths","dateFns.addWeeks","dateFns.startOfWeek","dateFns.endOfWeek","dateFns.addYears","dateFns.startOfYear","dateFns.endOfYear","dateFns.subWeeks","dateFns.subYears"],"mappings":";;;;;;;;;;;AAAA;AAGA,MAAa,OAAO,GAAQ;IAC1B,EAAE;IACF,EAAE;CACH;;;;;;ACND;AAgEA,IAAW,8BAA8B,GAAQ;IAC7C,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU;;;IAAC,MAAM,2BAA2B,EAAC;IAC1D,KAAK,EAAE,IAAI;CACd;AAQD,MAAa,2BAA2B;;;;;IAgCpC,YAAoB,UAAsB,EAAU,GAAsB;QAAtD,eAAU,GAAV,UAAU,CAAY;QAAU,QAAG,GAAH,GAAG,CAAmB;QApB1E,mBAAc,GAA8B;YACxC,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;YACxB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,YAAY;YACxB,YAAY,EAAE,YAAY;YAC1B,UAAU,EAAE,QAAQ;YACpB,WAAW,EAAE,CAAC;YACd,IAAI,EAAE,IAAI;SACb,CAAC;QAIM,sBAAiB;;;QAAe;SACvC,EAAC;QAEM,qBAAgB;;;QAAqB;SAC5C,EAAC;KAGD;;;;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;IAED,IAAI,KAAK,CAAC,KAAsB;QAC5B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChC;;;;;IAED,UAAU,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QACD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KAC3B;;;;;IAED,gBAAgB,CAAC,EAAO;QACpB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC9B;;;;;IAED,iBAAiB,CAAC,EAAO;QACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC/B;;;;IAED,eAAe;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC;QAC1D,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;KAC5B;;;;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAEA,OAAe,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SACpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC;QACnD,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM;;;;YAAC,CAAC,IAAI;gBAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC;aAC5C,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACV;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;aAChD;YAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;KACJ;;;;;IAED,WAAW,CAAC,OAA6C;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC;QAGnD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;KACpB;;;;IAED,SAAS;QACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5C;;;;;IAED,YAAY,CAAC,GAAW;;cACd,IAAI,GAAG,IAAI,IAAI,EAAE;;cACjB,SAAS,GAAGC,MAAc,CAACC,MAAc,CAAC,IAAI,EAAE,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,EAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,CAAC;QAC5H,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D;;;;IAED,gBAAgB;QACZ,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;;cACT,KAAK,GAASC,YAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;;cAC7C,GAAG,GAASC,UAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;;cAEzC,IAAI,GAAWC,OAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG;;;;QAAC,CAAC;;kBAC5C,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW;;kBACtC,SAAS,GAAG,WAAW,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;YAC3C,OAAO;gBACH,IAAI,EAAE,CAAC;gBACP,GAAG,EAAEC,OAAe,CAAC,CAAC,CAAC;gBACvB,OAAO,EAAEC,MAAc,CAAC,CAAC,CAAC;gBAC1B,WAAW;gBACX,SAAS;gBACT,KAAK,EAAEC,OAAe,CAAC,CAAC,CAAC;gBACzB,aAAa,EAAEC,iBAAyB,CAAC,CAAC,CAAC;gBAC3C,YAAY,EAAEC,gBAAwB,CAAC,CAAC,CAAC;gBACzC,OAAO,EAAE,IAAI;gBACb,IAAI,EAAEC,SAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACzC,EAAE,EAAEA,SAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBACrC,aAAa,EAAEC,aAAqB,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;aACtE,CAAC;SACL,EAAC;;cAEI,eAAe,GAAGL,MAAc,CAAC,KAAK,CAAC,GAAG,CAAC;;YAC7C,aAAa,GAAW,EAAE;QAC9B,IAAI,eAAe,GAAG,CAAC,EAAE;YACrB,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG;;;;YAAC,CAAC;;sBACrD,CAAC,GAAGM,OAAe,CAAC,KAAK,EAAE,eAAe,GAAG,CAAC,CAAC;gBACrD,OAAO;oBACH,IAAI,EAAE,CAAC;oBACP,GAAG,EAAEP,OAAe,CAAC,CAAC,CAAC;oBACvB,OAAO,EAAEC,MAAc,CAAC,CAAC,CAAC;oBAC1B,aAAa,EAAEE,iBAAyB,CAAC,CAAC,CAAC;oBAC3C,YAAY,EAAEC,gBAAwB,CAAC,CAAC,CAAC;oBACzC,KAAK,EAAE,KAAK;oBACZ,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,KAAK;oBACX,EAAE,EAAE,KAAK;oBACT,aAAa,EAAE,KAAK;iBACvB,CAAC;aACL,EAAC,CAAC;SACN;QAED,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG;gBACT,IAAI,EAAET,MAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;gBAC9D,EAAE,EAAEA,MAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAC7D,CAAC;SACL;aAAM;YACH,IAAI,CAAC,KAAK;gBACN,GAAGA,MAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAIA,MAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC;SAC/H;KACJ;;;;;;IAED,cAAc,CAAC,CAAa,EAAE,SAAwB;;QAElD,IAAI,SAAS,KAAK,MAAM,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,CAAC;SACnE;aAAM;YACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,CAAC;SAC9G;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SAC3B;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC;SACjD;KACJ;;;;;IAED,aAAa,CAAC,CAAa;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;;;;;IAED,UAAU,CAAC,CAAa,EAAE,KAAa;QACnC,CAAC,CAAC,cAAc,EAAE,CAAC;;cACb,YAAY,GAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI;QAEhD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YACnC,CAACa,OAAe,CAACC,UAAkB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACrF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC/B,CAACC,QAAgB,CAACD,UAAkB,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC9F,OAAO;SACV;QAED,KAAK,IAAI,CAAC,MAAM,KAAK,IAAI,IAAIC,QAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;YACzE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;QAED,KAAK,IAAI,CAAC,MAAM,KAAK,MAAM,IAAIF,OAAe,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG;YACxE,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,CAAC;SACnE;aAAM;YACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,GAAG,CAAC;SAC9G;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG;;;;YAAC,CAAC,IAAI;gBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB,EAAC,CAAC;SACN;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAED,SAAS;QACL,IAAI,CAAC,IAAI,GAAGG,SAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAED,SAAS;QACL,IAAI,CAAC,IAAI,GAAGC,SAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAED,WAAW,CAAC,KAA8B;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAErC,IAAIJ,OAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;QAED,IAAI,CAAC,IAAI,GAAGC,UAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAED,WAAW,CAAC,KAAkB;;cACpB,KAAK,GAAGA,UAAkB,CAAC,IAAI,IAAI,EAAE,CAAC;;YACxC,QAAQ,GAAG,KAAK;;YAChB,MAAM,GAAG,KAAK;QAElB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG;;;;QAAC,CAAC,IAAI;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;SAC5C,EAAC,CAAC;;cAEG,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;;cACpD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;;cAChD,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC;;cAC1C,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE;QAEzC,QAAQ,IAAI;YACR,KAAK,GAAG;gBACJ,IAAI,MAAM,EAAE;oBACR,QAAQ,GAAGG,SAAiB,CAAC,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;oBACzD,MAAM,GAAGA,SAAiB,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC;iBACtD;gBAED,IAAI,CAAC,QAAQ,GAAGf,YAAoB,CAAC,QAAQ,CAAC,CAAC;gBAC/C,IAAI,CAAC,MAAM,GAAGC,UAAkB,CAAC,MAAM,CAAC,CAAC;gBACzC,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,MAAM,EAAE;oBACR,QAAQ,GAAGe,QAAgB,CAAC,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;oBACxD,MAAM,GAAGA,QAAgB,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC;iBACrD;gBAED,IAAI,CAAC,QAAQ,GAAGC,WAAmB,CAAC,QAAQ,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,MAAM,GAAGC,SAAiB,CAAC,MAAM,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAC,CAAC,CAAC;gBAClF,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,MAAM,EAAE;oBACR,QAAQ,GAAGC,QAAgB,CAAC,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;oBACxD,MAAM,GAAGA,QAAgB,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC;iBACrD;gBAED,IAAI,CAAC,QAAQ,GAAGC,WAAmB,CAAC,QAAQ,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,GAAGC,SAAiB,CAAC,MAAM,CAAC,CAAC;gBACxC,MAAM;YACV,KAAK,GAAG;gBACJ,IAAI,MAAM,EAAE;oBACR,QAAQ,GAAGxB,OAAe,CAAC,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,CAAC;oBACvD,MAAM,GAAGA,OAAe,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC;iBACpD;gBAED,IAAI,CAAC,QAAQ,GAAGe,UAAkB,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,MAAM,GAAGA,UAAkB,CAAC,MAAM,CAAC,CAAC;gBACzC,MAAM;;YAEV,KAAK,IAAI;gBACL,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,QAAQ,GAAGE,SAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC/C;qBAAM;oBACH,MAAM,GAAGC,SAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC7C;gBAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,MAAM;YACV,KAAK,IAAI;gBACL,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,QAAQ,GAAGO,QAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC9C;qBAAM;oBACH,MAAM,GAAGN,QAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC5C;gBAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,MAAM;YACV,KAAK,IAAI;gBACL,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,QAAQ,GAAGO,QAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC9C;qBAAM;oBACH,MAAM,GAAGJ,QAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC5C;gBAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,MAAM;YACV;gBACI,IAAI,OAAO,GAAG,CAAC,EAAE;oBACb,QAAQ,GAAGT,OAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC7C;qBAAM;oBACH,MAAM,GAAGb,OAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC3C;gBACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,MAAM;SACb;QAED,IAAI,CAAC,IAAI,GAAGe,UAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAGD,eAAe,CAAC,CAAa;;cACnB,MAAM,GAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM;QACvC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAU,MAAM,IAAE,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACvG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;KACJ;;;;;;IAKM,IAAI,CAAC,SAAwB,MAAM;QACtC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACrC;;;;;IAKM,KAAK;QACR,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;;;;IAKM,MAAM;QACT,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO;SACV;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;;;;;;IAEO,OAAO,CAAC,IAAyD;QACrE,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,IAAI,CAAC;SACf;QAED,IAAI,IAAI,YAAY,IAAI,EAAE;YACtB,OAAOA,UAAkB,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,IAAI,IAAI,YAAY,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE;YAC/D,OAAOA,UAAkB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC5E;QAED,OAAO,IAAI,CAAC;KACf;;;YA5ZJ,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,+nSAAiD;gBAEjD,SAAS,EAAE,CAAC,8BAA8B,CAAC;;aAC9C;;;;YA1EoC,UAAU;YACjB,iBAAiB;;;wBA2E1C,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;sBACvC,KAAK;8BAoWL,YAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;;;;;;;AClb9C,MAOa,aAAa;;;;;;IAExB,SAAS,CAAC,KAAW,EAAE,GAAG,IAAgB;;cAClC,OAAO,GAAQ,EAAE;QACvB,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACtD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;QAED,OAAOd,MAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE,OAAO,CAAC,CAAC;KAChE;;;YAZF,IAAI,SAAC;gBACJ,IAAI,EAAE,WAAW;aAClB;;;;;;;ACND,MAea,wBAAwB;;;YARpC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;iBACZ;gBACD,YAAY,EAAE,CAAC,2BAA2B,EAAE,aAAa,CAAC;gBAC1D,OAAO,EAAE,CAAC,2BAA2B,EAAE,aAAa,EAAE,WAAW,CAAC;aACnE;;;;;"}